// <auto-generated />
using System;
using CabPaymentService.Infrastructures.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CabPaymentService.Migrations
{
    [DbContext(typeof(PostgresDbContext))]
    [Migration("20220510212327_AddPaymentCommission")]
    partial class AddPaymentCommission
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CabPaymentService.Model.Entities.BillInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<string>("Mobile")
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BillInfos");
                });

            modelBuilder.Entity("CabPaymentService.Model.Entities.Invoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Company")
                        .HasColumnType("text");

                    b.Property<string>("Customer")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("Taxcode")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("CabPaymentService.Model.Entities.PaymentCommission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("CommissionPercentage")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("PaymentCommission");
                });

            modelBuilder.Entity("CabPaymentService.Model.Entities.VnPayTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<string>("BankCode")
                        .HasColumnType("text");

                    b.Property<Guid>("BillId")
                        .HasColumnType("uuid");

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("ExpireDate")
                        .HasColumnType("text");

                    b.Property<Guid>("InvoiceId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Locale")
                        .HasColumnType("text");

                    b.Property<string>("OrderDesc")
                        .HasColumnType("text");

                    b.Property<string>("PayStatus")
                        .HasColumnType("text");

                    b.Property<Guid?>("PaymentCommissionId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PaymentReceiver")
                        .HasColumnType("uuid");

                    b.Property<long>("PaymentTranId")
                        .HasColumnType("bigint");

                    b.Property<string>("ResponseCode")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<DateTime>("TransactionCreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TransactionType")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("BillId")
                        .IsUnique();

                    b.HasIndex("InvoiceId")
                        .IsUnique();

                    b.HasIndex("PaymentCommissionId");

                    b.ToTable("VnpayTransactions");
                });

            modelBuilder.Entity("CabPaymentService.Model.Entities.VnPayTransaction", b =>
                {
                    b.HasOne("CabPaymentService.Model.Entities.BillInfo", "BillInfo")
                        .WithOne("Transaction")
                        .HasForeignKey("CabPaymentService.Model.Entities.VnPayTransaction", "BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CabPaymentService.Model.Entities.Invoice", "Invoice")
                        .WithOne("Transaction")
                        .HasForeignKey("CabPaymentService.Model.Entities.VnPayTransaction", "InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CabPaymentService.Model.Entities.PaymentCommission", "PaymentCommission")
                        .WithMany()
                        .HasForeignKey("PaymentCommissionId");

                    b.Navigation("BillInfo");

                    b.Navigation("Invoice");

                    b.Navigation("PaymentCommission");
                });

            modelBuilder.Entity("CabPaymentService.Model.Entities.BillInfo", b =>
                {
                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("CabPaymentService.Model.Entities.Invoice", b =>
                {
                    b.Navigation("Transaction");
                });
#pragma warning restore 612, 618
        }
    }
}
